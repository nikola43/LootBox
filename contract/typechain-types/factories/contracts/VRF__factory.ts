/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { VRF, VRFInterface } from "../../contracts/VRF";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "RequestNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "RandomWordsFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numberOfWords",
        type: "uint256",
      },
    ],
    name: "RandomWordsRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOracle",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOracle",
        type: "address",
      },
    ],
    name: "UpdateOracle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "_randomWords",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "fulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingRequests",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numberOfWords",
        type: "uint256",
      },
    ],
    name: "requestRandomWords",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOracle",
        type: "address",
      },
    ],
    name: "setTrustedOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dd9380380610dd983398101604081905261002f91610180565b61003833610130565b600180556001600160a01b0381166100965760405162461bcd60e51b815260206004820152601d60248201527f4f7261636c6520616464726573732063616e6e6f74206265207a65726f000000604482015260640160405180910390fd5b600280546001600160a01b0319166001600160a01b0383161790556003546040516001600160601b03193360601b166020820152426034820152605481019190915260740160408051601f198184030181529082905280516020909101206003556001600160a01b038216906000907fb1d1442dba579887e297ac433e5716c847abf2dc052ee9de4869b7b1b8f6206d908290a3506101b0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561019257600080fd5b81516001600160a01b03811681146101a957600080fd5b9392505050565b610c1a806101bf6000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806306e10f8e146100885780632795ad201461009d578063715018a6146100d55780637dc0d1d0146100dd5780638da5cb5b146101085780639e1604e414610110578063b22bd29814610131578063bc85777c14610144578063f2fde38b14610157575b600080fd5b61009b610096366004610976565b61016a565b005b6100c06100ab366004610a61565b60046020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61009b6102e0565b6002546100f0906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b6100f06102f4565b61012361011e366004610a7a565b610303565b6040519081526020016100cc565b61009b61013f366004610a9c565b610334565b610123610152366004610a61565b6103ed565b61009b610165366004610a9c565b6104e6565b6002546001600160a01b03163314610194576040516282b42960e81b815260040160405180910390fd5b61019c61055f565b60008481526004602052604090205460ff166101cb57604051632589d98f60e11b815260040160405180910390fd5b6101d7848484846105b8565b6101f457604051638baa579f60e01b815260040160405180910390fd5b60008481526005602090815260409091208451610213928601906108b8565b5060005b83518110156102805761026e6040518060400160405280601281526020017114985b991bdb481ddbdc990809590e88095960721b8152508286848151811061026157610261610acc565b6020026020010151610666565b8061027881610ae2565b915050610217565b5060008481526004602052604090819020805460ff191690555184907f31ac2502729172c30de76dcac1a2f93677cd2f0ff20af0c3ab3a459115acbe9e906102c9908690610b09565b60405180910390a26102da60018055565b50505050565b6102e86106b2565b6102f26000610711565b565b6000546001600160a01b031690565b6005602052816000526040600020818154811061031f57600080fd5b90600052602060002001600091509150505481565b61033c6106b2565b6001600160a01b0381166103a15760405162461bcd60e51b815260206004820152602160248201527f4e6577206f7261636c6520616464726573732063616e6e6f74206265207a65726044820152606f60f81b60648201526084015b60405180910390fd5b600280546001600160a01b0319166001600160a01b03831690811790915560405181907fb1d1442dba579887e297ac433e5716c847abf2dc052ee9de4869b7b1b8f6206d90600090a350565b6003546040516001600160601b03193360601b166020820152426034820152605481019190915260009060740160408051808303601f1901815282825280516020918201206003819055429184019190915244918301919091526001600160601b031933606090811b82168185015230901b1660748301526088820184905260a882015260c80160408051601f19818403018152828252805160209182012060008181526004909252919020805460ff191660011790559150339082907fd699f311d72ead69f7d9e055333508688702311de7a2f27589d07b5ef56d04b3906104d99086815260200190565b60405180910390a3919050565b6104ee6106b2565b6001600160a01b0381166105535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610398565b61055c81610711565b50565b6002600154036105b15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610398565b6002600155565b60008085856040516020016105ce929190610b4d565b60405160208183030381529060405280519060200120905060008160405160200161062491907b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b8152601c810191909152603c0190565b6040516020818303038152906040528051906020012090506000610649828787610761565b6002546001600160a01b0390811691161498975050505050505050565b6106ad83838360405160240161067e93929190610b88565b60408051601f198184030181529190526020810180516001600160e01b031663ca47c4eb60e01b179052610893565b505050565b336106bb6102f4565b6001600160a01b0316146102f25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610398565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000604182146107ae5760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610398565b82356020840135604085013560001a6fa2a8918ca85bafe22016d0b997e4df60600160ff1b038211156107f457604051638baa579f60e01b815260040160405180910390fd5b8060ff16601b1415801561080c57508060ff16601c14155b1561082a57604051638baa579f60e01b815260040160405180910390fd5b60408051600081526020810180835289905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561087d573d6000803e3d6000fd5b5050604051601f19015198975050505050505050565b61055c8160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b8280548282559060005260206000209081019282156108f3579160200282015b828111156108f35782518255916020019190600101906108d8565b506108ff929150610903565b5090565b5b808211156108ff5760008155600101610904565b634e487b7160e01b600052604160045260246000fd5b60008083601f84011261094057600080fd5b5081356001600160401b0381111561095757600080fd5b60208301915083602082850101111561096f57600080fd5b9250929050565b6000806000806060858703121561098c57600080fd5b843593506020808601356001600160401b03808211156109ab57600080fd5b818801915088601f8301126109bf57600080fd5b8135818111156109d1576109d1610918565b8060051b604051601f19603f830116810181811085821117156109f6576109f6610918565b6040529182528381018501918581018c841115610a1257600080fd5b948601945b83861015610a2e5785358152948601948601610a17565b50975050506040880135925080831115610a4757600080fd5b5050610a558782880161092e565b95989497509550505050565b600060208284031215610a7357600080fd5b5035919050565b60008060408385031215610a8d57600080fd5b50508035926020909101359150565b600060208284031215610aae57600080fd5b81356001600160a01b0381168114610ac557600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610b0257634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252825182820181905260009190848201906040850190845b81811015610b4157835183529284019291840191600101610b25565b50909695505050505050565b82815260006020808301845182860160005b82811015610b7b57815184529284019290840190600101610b5f565b5091979650505050505050565b606081526000845180606084015260005b81811015610bb65760208188018101516080868401015201610b99565b506000608082850101526080601f19601f83011684010191505083602083015282604083015294935050505056fea2646970667358221220d767562267fe52e6631ff2f71fde6269008099fb06423043946fafe481d3f0db64736f6c63430008140033";

type VRFConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRF__factory extends ContractFactory {
  constructor(...args: VRFConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_oracle, overrides || {});
  }
  override deploy(
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_oracle, overrides || {}) as Promise<
      VRF & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VRF__factory {
    return super.connect(runner) as VRF__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFInterface {
    return new Interface(_abi) as VRFInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VRF {
    return new Contract(address, _abi, runner) as unknown as VRF;
  }
}
